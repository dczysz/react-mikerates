{"version":3,"sources":["components/SettingsPanel/PaneEditor/PaneEditor.module.css","containers/RatePane/RatePane.module.css","components/Input/Input.module.css","components/SettingsPanel/SettingsPanel.module.css","containers/VolumePane/VolumePane.module.css","containers/Totals/Totals.module.css","components/TopBar/TopBar.module.css","components/DrawerToggle/DrawerToggle.module.css","components/Backdrop/Backdrop.module.css","components/Input/Input.js","containers/Totals/Totals.js","containers/VolumePane/VolumePane.js","containers/RatePane/RatePane.js","components/DrawerToggle/DrawerToggle.js","components/TopBar/TopBar.js","components/SettingsPanel/PaneEditor/PaneEditor.js","components/SettingsPanel/SettingsPanel.js","components/Backdrop/Backdrop.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PaneEditor","editing","name","numOfLabel","numOfInput","btnDone","btnRemove","RatePane","heading","totals","Input","label","inputField","success","danger","ok","SettingsPanel","open","closed","inputGroup","Totals","Target","DrawerToggle","Backdrop","state","focused","handleFocus","event","_this","setState","_this2","this","value","props","val","showDecimals","Number","toFixed","react_default","a","createElement","className","classes","join","type","onChange","changed","readOnly","disabled","onFocus","onBlur","Component","secPerPartTarget","secPerPartClassesArr","secPerPart","push","secPerPartClasses","components_Input_Input","partsPerHour","partsPerMin","VolumePane","pcsYear","pcsWeek","pcsDay","numShifts","hrsShift","pcsYearChangedHandler","e","stateChangeObj","target","updateTotals","updatePcsYear","pcsWeekChangedHandler","pcsDayChangedHandler","numShiftsChangedHandler","hrsShiftChangedHandler","newStateChangeObj","newState","Object","objectSpread","updateSecPerPartTarget","ratePaneClasses","numOf","cycleTime","numOfChangedHandler","cycleTimeChangedHandler","pageName","drawerToggle","onClick","clicked","topBar","num","parts","toString","split","replace","addCommas","tempNewName","tempNewNumOf","toggleEditingHandler","newPane","addPane","nameChangedHandler","newTempName","newTempNumOf","console","log","addButtonIcon","classesArr","new","defaultValue","btnEdit","deleteClicked","id","paneChangedHandler","panesComps","panes","map","paneObj","SettingsPanel_PaneEditor_PaneEditor","key","panelClasses","show","backdrop","App","volume","winding","molding","showSettings","nextId","swipeRefresh","secPerPartTargetChangedHandler","newTargetVal","newSecPerPartState","newPcsYearVal","toggleShowSettings","deletePaneHandler","paneId","newPaneState","pane","filter","addPaneHandler","newPaneObj","ratePanes","index","containers_RatePane_RatePane","TopBar","lib_default","swipeOptions","continuous","ref","el","containers_VolumePane_VolumePane","components_SettingsPanel_SettingsPanel","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f21f04f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"PaneEditor\":\"PaneEditor_PaneEditor__N9Moc\",\"editing\":\"PaneEditor_editing__3vRt7\",\"name\":\"PaneEditor_name__3471m\",\"numOfLabel\":\"PaneEditor_numOfLabel__25eqW\",\"numOfInput\":\"PaneEditor_numOfInput__3prcE\",\"btnDone\":\"PaneEditor_btnDone__35cfb\",\"btnRemove\":\"PaneEditor_btnRemove__3KuQC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RatePane\":\"RatePane_RatePane__1qK1w\",\"heading\":\"RatePane_heading__2ke-n\",\"totals\":\"RatePane_totals__1mYoo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1f4mV\",\"label\":\"Input_label__2GIs7\",\"inputField\":\"Input_inputField__3OnUv\",\"success\":\"Input_success__2z7E-\",\"danger\":\"Input_danger__13z7s\",\"ok\":\"Input_ok__14mkh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SettingsPanel\":\"SettingsPanel_SettingsPanel__1SgU2\",\"open\":\"SettingsPanel_open__2glUN\",\"closed\":\"SettingsPanel_closed__1AbMp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputGroup\":\"VolumePane_inputGroup__1wlN_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Totals\":\"Totals_Totals__3tEXU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Target\":\"TopBar_Target__2FgiC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__22JFj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3OIoK\"};","import React, { Component } from 'react';\r\n\r\nimport classes from './Input.module.css';\r\n\r\nclass Input extends Component {\r\n\r\n  state = {\r\n    focused: false,\r\n  }\r\n\r\n  handleFocus = (event, focused) => {\r\n    this.setState({ focused: focused });\r\n    if (focused) {\r\n      //TODO: select text\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // Dont add decimals to integer inputs\r\n    let value = this.props.val;\r\n\r\n    if (value === 0 || value === '') {\r\n      value = '';\r\n    } else if (this.props.showDecimals) {\r\n      value = Number(this.props.val);\r\n      // Only set toFixed if not focused\r\n      if (!this.state.focused) {\r\n        value = value.toFixed(2);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className={classes.Input}>\r\n        <label className={classes.label}>{this.props.label}</label>\r\n        <input\r\n          className={[classes.inputField, classes[this.props.classes]].join(' ')}\r\n          type=\"number\"\r\n          value={value}\r\n          onChange={this.props.changed}\r\n          readOnly={this.props.readOnly}\r\n          disabled={this.props.disabled}\r\n          onFocus={(event) => this.handleFocus(event, true)}\r\n          onBlur={(event) => this.handleFocus(event, false)}\r\n        ></input>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n \r\nexport default Input;","import React from 'react';\r\n\r\nimport Input from '../../components/Input/Input';\r\nimport classes from './Totals.module.css';\r\n\r\nconst totals = (props) => {\r\n  const secPerPartTarget = props.secPerPartTarget;\r\n  const secPerPartClassesArr = [];\r\n\r\n  if (props.secPerPart !== '') {\r\n    if (props.secPerPart < secPerPartTarget) \r\n      secPerPartClassesArr.push('success');\r\n    else if (props.secPerPart > secPerPartTarget) \r\n      secPerPartClassesArr.push('danger');\r\n    else\r\n      secPerPartClassesArr.push('ok');\r\n  }\r\n  const secPerPartClasses = secPerPartClassesArr.join(' ');\r\n\r\n    // Condidtionally apply style to secPerPart input depending on target\r\n    return (\r\n      <div className={classes.Totals}>\r\n        <Input\r\n          label=\"PP/Hour\"\r\n          val={props.partsPerHour}\r\n          readOnly\r\n          disabled\r\n          showDecimals\r\n        />\r\n        <Input\r\n          label=\"PP/Min\"\r\n          val={props.partsPerMin}\r\n          readOnly\r\n          disabled\r\n          showDecimals\r\n        />\r\n        <Input\r\n          classes={secPerPartClasses}\r\n          label=\"(s) per part\"\r\n          val={props.secPerPart}\r\n          readOnly\r\n          disabled\r\n          showDecimals\r\n        />\r\n      </div>\r\n    );\r\n\r\n}\r\n \r\nexport default totals;","import React, { Component } from 'react';\r\n\r\nimport ratePaneClasses from '../RatePane/RatePane.module.css';\r\nimport classes from './VolumePane.module.css';\r\nimport Input from '../../components/Input/Input';\r\nimport Totals from '../Totals/Totals';\r\n\r\nclass VolumePane extends Component {\r\n  state = {\r\n    pcsYear: '',\r\n    pcsWeek: '',\r\n    pcsDay: '',\r\n    numShifts: '',\r\n    hrsShift: 7.5,\r\n    partsPerHour: '',\r\n    partsPerMin: '',\r\n    secPerPart: '',\r\n  }\r\n\r\n  //TODO: Make modular, use array and get indexes to make correct calcs?\r\n  pcsYearChangedHandler = (e) => {\r\n    const stateChangeObj = {\r\n      pcsYear: e.target.value,\r\n      pcsWeek: e.target.value / 50,\r\n      pcsDay: e.target.value / 50 / 5,\r\n    }\r\n    this.updateTotals(stateChangeObj);\r\n\r\n    // Update pcsYear in App state for Totals reference\r\n    this.props.updatePcsYear(e.target.value);\r\n  }\r\n\r\n  pcsWeekChangedHandler = (e) => {\r\n    const stateChangeObj = {\r\n      pcsYear: e.target.value * 50,\r\n      pcsWeek: e.target.value,\r\n      pcsDay: e.target.value / 5,\r\n    }\r\n    this.updateTotals(stateChangeObj);\r\n\r\n    // Update pcsYear in App state for Totals reference\r\n    this.props.updatePcsYear(stateChangeObj.pcsYear);\r\n  }\r\n\r\n  pcsDayChangedHandler = (e) => {\r\n    const stateChangeObj = {\r\n      pcsYear: e.target.value * 50 * 5,\r\n      pcsWeek: e.target.value * 5,\r\n      pcsDay: e.target.value,\r\n    }\r\n    this.updateTotals(stateChangeObj);\r\n\r\n    // Update pcsYear in App state for Totals reference\r\n    this.props.updatePcsYear(stateChangeObj.pcsYear);\r\n  }\r\n\r\n  numShiftsChangedHandler = (e) => {\r\n    this.updateTotals({ numShifts: e.target.value });\r\n  }\r\n\r\n  hrsShiftChangedHandler = (e) => {\r\n    this.updateTotals({ hrsShift: e.target.value });\r\n  }\r\n\r\n  updateTotals = (newStateChangeObj) => {\r\n    const newState = {...this.state, ...newStateChangeObj};\r\n\r\n    // Check if all required input fields are filled in\r\n    if (newState.pcsYear !== 0   && newState.pcsYear !== '' &&\r\n        newState.pcsWeek !== 0   && newState.pcsWeek !== '' &&\r\n        newState.pcsDay !== 0    && newState.pcsDay !== '' &&\r\n        newState.numShifts !== 0 && newState.numShifts !== '' &&\r\n        newState.hrsShift !== 0  && newState.hrsShift !== '') {\r\n          \r\n          // Calculate totals\r\n          newState.partsPerHour = newState.pcsDay / \r\n            (newState.numShifts * newState.hrsShift);\r\n          newState.partsPerMin = newState.partsPerHour / 60;\r\n          newState.secPerPart = 60 / newState.partsPerMin;\r\n    }\r\n\r\n    // Update state\r\n    this.setState(newState);\r\n\r\n    // Update secPerPart target in App.js state\r\n    this.props.updateSecPerPartTarget(newState.secPerPart);\r\n  }\r\n\r\n\r\n  render() { \r\n    return (\r\n      <div>\r\n        <h1 className={ratePaneClasses.heading}>Volume</h1>\r\n        <div className={classes.inputGroup}>\r\n          <Input\r\n            label=\"Pcs. Year\"\r\n            changed={this.pcsYearChangedHandler}\r\n            val={this.state.pcsYear}\r\n          />\r\n          <Input\r\n            label=\"Week (50)\"\r\n            changed={this.pcsWeekChangedHandler}\r\n            val={this.state.pcsWeek}\r\n            showDecimals\r\n          />\r\n          <Input\r\n            label=\"Day (5)\"\r\n            changed={this.pcsDayChangedHandler}\r\n            val={this.state.pcsDay}\r\n            showDecimals\r\n          />\r\n        </div>\r\n        <div className={classes.inputGroup}>\r\n          <Input\r\n            label=\"# Shifts\"\r\n            changed={this.numShiftsChangedHandler}\r\n            val={this.state.numShifts}\r\n          />\r\n          <Input\r\n            label=\"Hrs. Shift\"\r\n            changed={this.hrsShiftChangedHandler}\r\n            val={this.state.hrsShift}\r\n          />\r\n        </div>\r\n        <Totals\r\n          partsPerHour={this.state.partsPerHour}\r\n          partsPerMin={this.state.partsPerMin}\r\n          secPerPart={this.state.secPerPart}\r\n          secPerPartTarget={this.props.secPerPartTarget}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default VolumePane;","import React, { Component } from 'react';\r\n\r\nimport classes from './RatePane.module.css';\r\nimport Input from '../../components/Input/Input';\r\nimport Totals from '../Totals/Totals';\r\n\r\nclass RatePane extends Component {\r\n  state = {\r\n    numOf: '',\r\n    cycleTime: '',\r\n    partsPerHour: '',\r\n    partsPerMin: '',\r\n    secPerPart: '',\r\n  }\r\n\r\n  numOfChangedHandler = (e) => {\r\n    this.updateTotals({ numOf: Number(e.target.value) });\r\n  }\r\n\r\n  cycleTimeChangedHandler = (e) => {\r\n    this.updateTotals({ cycleTime: Number(e.target.value) });\r\n  }\r\n\r\n  updateTotals = (newStateChangeObj) => {\r\n    // Copy state and overwrite changed val with newStateChangeObj\r\n    const newState = {...this.state, ...newStateChangeObj};\r\n\r\n    // Calculate totals\r\n    if (newState.numOf !== 0 && newState.numOf !== '' &&\r\n      newState.cycleTime !== 0 && newState.cycleTime !== '') {\r\n      \r\n        newState.secPerPart = newState.cycleTime / newState.numOf;\r\n        newState.partsPerMin = 60 / newState.secPerPart;\r\n        newState.partsPerHour = 60 * newState.partsPerMin;\r\n    }\r\n\r\n    // Update state\r\n    this.setState(newState);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className={classes.RatePane}>\r\n        <div>\r\n          <h1 className={classes.heading}>{this.props.pageName}</h1>\r\n          <Input\r\n            label={'# ' + this.props.numOfLabel}\r\n            changed={this.numOfChangedHandler}\r\n            val={this.state.numOf}\r\n          />\r\n          <Input\r\n            label=\"Cycle Time (s)\"\r\n            changed={this.cycleTimeChangedHandler}\r\n            val={this.state.cycleTime}\r\n          />\r\n        </div>\r\n        \r\n        <div className={classes.totals}>\r\n          <Totals\r\n            partsPerHour={this.state.partsPerHour}\r\n            partsPerMin={this.state.partsPerMin}\r\n            secPerPart={this.state.secPerPart}\r\n            secPerPartTarget={this.props.secPerPartTarget}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default RatePane;","import React from 'react';\r\n\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n  <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n  </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport classes from './TopBar.module.css';\r\nimport DrawerToggle from '../DrawerToggle/DrawerToggle';\r\n\r\nconst topBar = (props) => {\r\n\r\n  // Thank you Elias Zamaria: https://stackoverflow.com/a/2901298\r\n  const addCommas = (num) => {\r\n    var parts = num.toString().split(\".\");\r\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    return parts.join(\".\");\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Target}>\r\n      <div>\r\n        <p>Pcs. Year: <strong>{props.pcsYear === null ? '?' : addCommas(props.pcsYear)}</strong></p>\r\n        <p>(s) Per Part: <strong>{Number(props.target) === 0 ? '?' : Number(props.target).toFixed(2)}</strong></p>\r\n      </div>\r\n      <DrawerToggle\r\n        clicked={props.clicked}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default topBar;","import React, { Component } from 'react';\r\n\r\nimport classes from './PaneEditor.module.css';\r\n\r\nclass PaneEditor extends Component {\r\n  state = {\r\n    editing: false,\r\n    tempNewName: '',\r\n    tempNewNumOf: '',\r\n  }\r\n\r\n  toggleEditingHandler = () => {\r\n    const newPane = {};\r\n    // Add new pane\r\n    if (this.state.editing && this.state.tempNewName !== '' && this.state.tempNewNumOf !== '') {\r\n      newPane.name = this.state.tempNewName;\r\n      newPane.numOfLabel = this.state.tempNewNumOf;\r\n\r\n      // Send to App with new pane to update panes\r\n      this.props.addPane(newPane);\r\n    }\r\n    \r\n\r\n    //TODO: Send to App to update state.panes\r\n\r\n    this.setState({ editing: !this.state.editing });\r\n  }\r\n\r\n  // Store temporarily in state until confirm\r\n  nameChangedHandler = (newTempName) => {\r\n    this.setState({ tempNewName: newTempName });\r\n  }\r\n  numOfChangedHandler = (newTempNumOf) => {\r\n    console.log(newTempNumOf)\r\n    this.setState({ tempNewNumOf: newTempNumOf });\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    // Set up classes for component and add/edit/done button\r\n    let classesArr = [classes.PaneEditor];\r\n    let addButtonIcon;\r\n\r\n    if (this.state.editing) {\r\n      classesArr.push(classes.editing);\r\n\r\n      addButtonIcon = <i className={\"far fa-check-circle\"}></i>;\r\n    } else {\r\n      if (this.props.new) {\r\n        addButtonIcon = <i className=\"fas fa-plus-circle\"></i>;\r\n      } else {\r\n        addButtonIcon = <i className=\"far fa-edit\"></i>;\r\n      }\r\n    }\r\n\r\n    \r\n    \r\n\r\n    return (\r\n      <div className={classesArr.join(' ')}>\r\n        <input\r\n          type=\"text\"\r\n          className={classes.name}\r\n          defaultValue={this.props.name}\r\n          onChange={(e) => this.nameChangedHandler(e.target.value)}\r\n          disabled={!this.state.editing}\r\n        />\r\n        <div className={classes.numOfLabel}>\r\n          <span>{this.props.numOfLabel ? '# of: ' : ''}</span>\r\n          <input\r\n            type=\"text\"\r\n            className={classes.numOfInput}\r\n            defaultValue={this.props.numOfLabel}\r\n            onChange={(e) => this.numOfChangedHandler(e.target.value)}\r\n            disabled={!this.state.editing}\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          // Edit/Done Editing button\r\n          className={this.state.editing ? [classes.btnEdit, classes.btnDone].join(' ') : classes.btnEdit}\r\n          onClick={this.toggleEditingHandler}\r\n          onBlur={() => console.log('blur')}\r\n        >{addButtonIcon}</button>\r\n\r\n        <button\r\n          // Delete button\r\n          onClick={() => this.props.deleteClicked(this.props.id)}\r\n          className={classes.btnRemove}\r\n        ><i className=\"far fa-trash-alt\"></i></button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default PaneEditor;","import React, { Component } from 'react';\r\n\r\nimport classes from './SettingsPanel.module.css';\r\nimport PaneEditor from './PaneEditor/PaneEditor';\r\n\r\nclass SettingsPanel extends Component {\r\n  state = {\r\n\r\n  }\r\n\r\n  // panesCopy = this.props.panes.map(paneObj => {\r\n  //   return {...paneObj};\r\n  // });\r\n\r\n  paneChangedHandler = (e) => {\r\n    console.log(e);\r\n    \r\n  }\r\n\r\n  panesComps = this.props.panes.map(paneObj => {\r\n    return (\r\n      <PaneEditor\r\n        key={paneObj.id}\r\n        id={paneObj.id}\r\n        name={paneObj.name}\r\n        numOfLabel={paneObj.numOfLabel}\r\n        changed={this.paneChangedHandler}\r\n        deleteClicked={this.props.deleteClicked}\r\n      />\r\n    );\r\n  });\r\n\r\n  render() {\r\n    // Set panel to open or closed\r\n    const panelClasses = [classes.SettingsPanel];\r\n    panelClasses.push(this.props.show ? classes.open : classes.closed);\r\n\r\n    return (\r\n      <div className={panelClasses.join(' ')}>\r\n        <h2>Settings</h2>\r\n\r\n        {this.panesComps}\r\n\r\n        <PaneEditor\r\n          key=\"newPanel\"\r\n          id={null}\r\n          // name={paneObj.name}\r\n          // numOfLabel={paneObj.numOfLabel}\r\n          changed={this.paneChangedHandler}\r\n          deleteClicked={this.props.deleteClicked}\r\n          addPane={this.props.addPane}\r\n          new\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default SettingsPanel;","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => {\r\n  return (props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null);\r\n};\r\n\r\nexport default backdrop;","import React, { Component } from 'react';\nimport ReactSwipe from 'react-swipe';\n\nimport './App.css';\nimport VolumePane from './containers/VolumePane/VolumePane';\nimport RatePane from './containers/RatePane/RatePane';\nimport Target from './components/TopBar/TopBar';\nimport SettingsPanel from './components/SettingsPanel/SettingsPanel';\nimport Backdrop from './components/Backdrop/Backdrop';\n\nclass App extends Component {\n  state = {\n    panes: [\n      {\n        id: 1,\n        name: 'winding',\n        numOfLabel: 'heads',\n      },\n      {\n        id: 2,\n        name: 'molding',\n        numOfLabel: 'cavities',\n      },\n    ],\n    secPerPart: {\n      volume: null,\n      winding: null,\n      molding: null,\n    },\n    pcsYear: null,\n    showSettings: false,\n    nextId: 3,\n    swipeRefresh: 0,\n  }\n\n  componentWillUpdate() {\n    console.log('[App] componentWillUpdate');\n    // get all the react swipe divs\n    // const swipeDivs = document.getElementsByClassName('react-swipe-container')[0].children[0];\n    // console.log(swipeDivs);\n\n    // let swipeDivsClasses = [];\n    // swipeDivs.forEach(div => {\n    //   // swipeDivsClasses.push()\n    // });\n    // console.log(swipeDivsClasses);\n    \n\n    // change their keys if they arent incremental\n\n    //! this.setState({ swipeRefresh: this.state.swipeRefresh + 1 });\n  }\n\n  secPerPartTargetChangedHandler = (newTargetVal) => {\n    const newSecPerPartState = {...this.state.secPerPart};\n    newSecPerPartState.volume = newTargetVal;\n\n    this.setState({ secPerPart: newSecPerPartState });\n  }\n\n  pcsYearChangedHandler = (newPcsYearVal) => {\n    this.setState({ pcsYear: newPcsYearVal });\n  }\n\n  toggleShowSettings = () => {\n    // Open or close settings \n    this.setState({ showSettings: !this.state.showSettings });\n  }\n\n  deletePaneHandler = paneId => {\n    // Copy pane state\n    const newPaneState = this.state.panes.map(pane => {\n      return {...pane};\n    })\n    .filter(pane => pane.id !== paneId);\n\n    this.setState({\n      panes: newPaneState,\n      swipeRefresh: this.state.swipeRefresh + 1,\n    });\n  }\n\n  addPaneHandler = newPaneObj => {\n    // Copy pane state\n    const newPaneState = this.state.panes.map(pane => {\n      return {...pane};\n    });\n\n    // Add next available id, push to new state obj\n    newPaneObj.id = this.state.nextId;\n    newPaneState.push(newPaneObj);\n\n    this.setState({\n      panes: newPaneState,\n      swipeRefresh: this.state.swipeRefresh + 1,\n    })\n  }\n\n  render() {\n    let reactSwipeEl; //! ReactSwipe must have divs as children, then components\n\n    // Set up other panes (besides volume)\n    const ratePanes = this.state.panes.map((pane, index) => {\n      return (\n        <div \n          className=\"swipeDiv\"\n          key={pane.name + index}>\n          <RatePane\n            pageName={pane.name}\n            numOfLabel={pane.numOfLabel}\n            secPerPartTarget={this.state.secPerPart[pane.name]}\n          />\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"App\">\n        <Target\n          pcsYear={this.state.pcsYear}\n          target={this.state.secPerPart.volume}\n          clicked={this.toggleShowSettings}\n        />\n\n        <ReactSwipe\n          swipeOptions={{ continuous: false }}\n          ref={el => (reactSwipeEl = el)}\n          key={this.state.swipeRefresh} // Only refreshes correctly on key change\n        >\n          <div className=\"swipeDiv\">\n            <VolumePane\n              secPerPartTarget={this.state.secPerPart.volume}\n              updateSecPerPartTarget={(newTargetVal) => this.secPerPartTargetChangedHandler(newTargetVal)}\n              updatePcsYear={(newPcsYearVal) => this.pcsYearChangedHandler(newPcsYearVal)} />\n          </div>\n\n          {ratePanes}\n\n        </ReactSwipe>\n\n        <SettingsPanel\n          show={this.state.showSettings}\n          clicked={this.toggleShowSettings}\n          panes={this.state.panes}\n          deleteClicked={this.deletePaneHandler}\n          addPane={this.addPaneHandler}\n        />\n        <Backdrop\n          show={this.state.showSettings}\n          clicked={this.toggleShowSettings}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}