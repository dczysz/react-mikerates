{"version":3,"sources":["components/PaneNav/PaneNav.module.css","components/SettingsPanel/PaneEditor/PaneEditor.module.css","components/DrawerToggle/DrawerToggle.module.css","components/SettingsPanel/SettingsPanel.module.css","containers/RatePane/RatePane.module.css","components/Input/Input.module.css","containers/VolumePane/VolumePane.module.css","components/TopBar/TopBar.module.css","containers/Totals/Totals.module.css","components/Backdrop/Backdrop.module.css","components/Input/Input.js","containers/Totals/Totals.js","containers/VolumePane/VolumePane.js","containers/RatePane/RatePane.js","components/DrawerToggle/DrawerToggle.js","components/TopBar/TopBar.js","components/SettingsPanel/PaneEditor/PaneEditor.js","components/SettingsPanel/SettingsPanel.js","components/Backdrop/Backdrop.js","components/PaneNav/PaneNav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PaneNav","ReactSwipe","arrow","line","left","right","top","bottom","disabled","PaneEditor","editing","name","numOfLabel","numOfInput","btnDone","btnRemove","DrawerToggle","topLine","bottomLine","topClosed","bottomClosed","SettingsPanel","open","closed","heading","darkToggle","dark","light","RatePane","totals","Input","label","inputField","success","danger","ok","inputGroup","TopBar","Target","Totals","Backdrop","state","focused","handleFocus","event","_this","setState","_this2","this","value","props","val","showDecimals","Number","toFixed","react_default","a","createElement","className","classes","join","type","onChange","changed","readOnly","onFocus","onBlur","Component","secPerPartTarget","secPerPartClassesArr","secPerPart","push","secPerPartClasses","components_Input_Input","partsPerHour","partsPerHourChanged","partsPerMin","partsPerMinChanged","secPerPartChanged","VolumePane","pcsYear","pcsWeek","pcsDay","numShifts","hrsShift","pcsYearChangedHandler","e","stateChangeObj","target","updateTotals","updatePcsYear","pcsWeekChangedHandler","pcsDayChangedHandler","numShiftsChangedHandler","hrsShiftChangedHandler","newStateChangeObj","newState","Object","objectSpread","updateSecPerPartTarget","updatePcs","console","log","ratePaneClasses","numOf","cycleTime","numOfChangedHandler","cycleTimeChangedHandler","pageName","drawerToggle","onClick","clicked","showSettings","topOpen","bottomOpen","topBar","num","parts","toString","split","replace","addCommas","undefined","tempNewName","tempNewNumOf","toggleEditingHandler","newPane","new","addPane","editPane","id","nameChangedHandler","newTempName","slice","newTempNumOf","addButtonIcon","classesArr","defaultValue","btnEdit","deleteClicked","panes","panesComps","map","paneObj","SettingsPanel_PaneEditor_PaneEditor","key","panelClasses","show","darkEnabled","darkToggleClicked","backdrop","paneNav","prev","next","App","volume","winding","molding","nextId","swipeRefresh","darkMode","position","getCookie","cookieName","ca","decodeURIComponent","document","cookie","i","length","c","charAt","substring","indexOf","secPerPartTargetChangedHandler","newTargetVal","newSecPerPartState","newPcsYearVal","toggleShowSettings","deletePaneHandler","paneId","newPaneState","pane","filter","updatePanesCookie","addPaneHandler","newPaneObj","editPaneHandler","editiedPaneObj","date","Date","setFullYear","getFullYear","concat","JSON","stringify","toUTCString","darkToggleClickedHandler","cookiePanes","parse","cookieSecPerPartStrArr","forEach","paneName","paneIds","newNextId","reactSwipeEl","ratePanes","index","containers_RatePane_RatePane","lib_default","swipeOptions","continuous","ref","el","containers_VolumePane_VolumePane","swipeEl","components_SettingsPanel_SettingsPanel","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.03ae77c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"PaneNav\":\"PaneNav_PaneNav__14_TS\",\"ReactSwipe\":\"PaneNav_ReactSwipe__1CWMW\",\"arrow\":\"PaneNav_arrow__35CUk\",\"line\":\"PaneNav_line__Z6WIu\",\"left\":\"PaneNav_left__KlkKQ\",\"right\":\"PaneNav_right__35r8g\",\"top\":\"PaneNav_top__1Cptv\",\"bottom\":\"PaneNav_bottom__hAtzF\",\"disabled\":\"PaneNav_disabled__1qTo8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PaneEditor\":\"PaneEditor_PaneEditor__N9Moc\",\"editing\":\"PaneEditor_editing__3vRt7\",\"name\":\"PaneEditor_name__3471m\",\"numOfLabel\":\"PaneEditor_numOfLabel__25eqW\",\"numOfInput\":\"PaneEditor_numOfInput__3prcE\",\"btnDone\":\"PaneEditor_btnDone__35cfb\",\"btnRemove\":\"PaneEditor_btnRemove__3KuQC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__22JFj\",\"topLine\":\"DrawerToggle_topLine__F2vNx\",\"bottomLine\":\"DrawerToggle_bottomLine__2I823\",\"topClosed\":\"DrawerToggle_topClosed__fTqfa\",\"bottomClosed\":\"DrawerToggle_bottomClosed__3bFb7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SettingsPanel\":\"SettingsPanel_SettingsPanel__1SgU2\",\"open\":\"SettingsPanel_open__2glUN\",\"closed\":\"SettingsPanel_closed__1AbMp\",\"heading\":\"SettingsPanel_heading__1PHc2\",\"darkToggle\":\"SettingsPanel_darkToggle__1RWz9\",\"dark\":\"SettingsPanel_dark__2xbFh\",\"light\":\"SettingsPanel_light__vvIGk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RatePane\":\"RatePane_RatePane__1qK1w\",\"heading\":\"RatePane_heading__2ke-n\",\"totals\":\"RatePane_totals__1mYoo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1f4mV\",\"label\":\"Input_label__2GIs7\",\"inputField\":\"Input_inputField__3OnUv\",\"success\":\"Input_success__2z7E-\",\"danger\":\"Input_danger__13z7s\",\"ok\":\"Input_ok__14mkh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputGroup\":\"VolumePane_inputGroup__1wlN_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TopBar\":\"TopBar_TopBar__L-8Jq\",\"Target\":\"TopBar_Target__2FgiC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Totals\":\"Totals_Totals__3tEXU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3OIoK\"};","import React, { Component } from 'react';\r\n\r\nimport classes from './Input.module.css';\r\n\r\nclass Input extends Component {\r\n\r\n  state = {\r\n    focused: false,\r\n  }\r\n\r\n  handleFocus = (event, focused) => {\r\n    this.setState({ focused: focused });\r\n    if (focused) {\r\n      //TODO: select text\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // Dont add decimals to integer inputs\r\n    let value = this.props.val;\r\n\r\n    if (value === 0 || value === '') {\r\n      value = '';\r\n    } else if (this.props.showDecimals) {\r\n      value = Number(this.props.val);\r\n      // Only set toFixed if not focused\r\n      if (!this.state.focused) {\r\n        value = value.toFixed(2);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className={classes.Input}>\r\n        <label className={classes.label}>{this.props.label}</label>\r\n        <input\r\n          className={[classes.inputField, classes[this.props.classes]].join(' ')}\r\n          type=\"number\"\r\n          value={value}\r\n          onChange={this.props.changed}\r\n          readOnly={this.props.readOnly}\r\n          disabled={this.props.disabled}\r\n          onFocus={(event) => this.handleFocus(event, true)}\r\n          onBlur={(event) => this.handleFocus(event, false)}\r\n        ></input>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n \r\nexport default Input;","import React from 'react';\r\n\r\nimport Input from '../../components/Input/Input';\r\nimport classes from './Totals.module.css';\r\n\r\nconst totals = (props) => {\r\n  const secPerPartTarget = props.secPerPartTarget;\r\n  const secPerPartClassesArr = [];\r\n\r\n  if (props.secPerPart !== '') {\r\n    if (props.secPerPart < secPerPartTarget) \r\n      secPerPartClassesArr.push('success');\r\n    else if (props.secPerPart > secPerPartTarget) \r\n      secPerPartClassesArr.push('danger');\r\n    else\r\n      secPerPartClassesArr.push('ok');\r\n  }\r\n  const secPerPartClasses = secPerPartClassesArr.join(' ');\r\n\r\n    // Condidtionally apply style to secPerPart input depending on target\r\n    return (\r\n      <div className={classes.Totals}>\r\n        <Input\r\n          label=\"PP/Hour\"\r\n          val={props.partsPerHour}\r\n          readOnly\r\n          disabled={props.disabled === 'false' ? false : true}\r\n          onChange={(event) => props.partsPerHourChanged(event)}\r\n          showDecimals\r\n        />\r\n        <Input\r\n          label=\"PP/Min\"\r\n          val={props.partsPerMin}\r\n          readOnly\r\n          disabled={props.disabled === 'false' ? false : true}\r\n          onChange={props.partsPerMinChanged}\r\n          showDecimals\r\n        />\r\n        <Input\r\n          classes={secPerPartClasses}\r\n          label=\"(s) per part\"\r\n          val={props.secPerPart}\r\n          readOnly\r\n          disabled={props.disabled === 'false' ? false : true}\r\n          onChange={props.secPerPartChanged}\r\n          showDecimals\r\n        />\r\n      </div>\r\n    );\r\n\r\n}\r\n \r\nexport default totals;","import React, { Component } from 'react';\r\n\r\nimport ratePaneClasses from '../RatePane/RatePane.module.css';\r\nimport classes from './VolumePane.module.css';\r\nimport Input from '../../components/Input/Input';\r\nimport Totals from '../Totals/Totals';\r\n\r\nclass VolumePane extends Component {\r\n  state = {\r\n    pcsYear: '',\r\n    pcsWeek: '',\r\n    pcsDay: '',\r\n    numShifts: '',\r\n    hrsShift: 7.5,\r\n    partsPerHour: '',\r\n    partsPerMin: '',\r\n    secPerPart: '',\r\n  }\r\n\r\n  //TODO: Make modular, use array and get indexes to make correct calcs?\r\n  pcsYearChangedHandler = (e) => {\r\n    const stateChangeObj = {\r\n      pcsYear: e.target.value,\r\n      pcsWeek: e.target.value / 50,\r\n      pcsDay: e.target.value / 50 / 5,\r\n    }\r\n    this.updateTotals(stateChangeObj);\r\n\r\n    // Update pcsYear in App state for Totals reference\r\n    this.props.updatePcsYear(e.target.value);\r\n  }\r\n\r\n  pcsWeekChangedHandler = (e) => {\r\n    const stateChangeObj = {\r\n      pcsYear: e.target.value * 50,\r\n      pcsWeek: e.target.value,\r\n      pcsDay: e.target.value / 5,\r\n    }\r\n    \r\n    // Update pcsYear in App state for Totals reference\r\n    this.props.updatePcsYear(stateChangeObj.pcsYear);\r\n    \r\n    this.updateTotals(stateChangeObj);\r\n  }\r\n\r\n  pcsDayChangedHandler = (e) => {\r\n    const stateChangeObj = {\r\n      pcsYear: e.target.value * 50 * 5,\r\n      pcsWeek: e.target.value * 5,\r\n      pcsDay: e.target.value,\r\n    }\r\n    \r\n    // Update pcsYear in App state for Totals reference\r\n    this.props.updatePcsYear(stateChangeObj.pcsYear);\r\n\r\n    this.updateTotals(stateChangeObj);\r\n  }\r\n\r\n  numShiftsChangedHandler = (e) => {\r\n    this.updateTotals({ numShifts: e.target.value });\r\n  }\r\n\r\n  hrsShiftChangedHandler = (e) => {\r\n    this.updateTotals({ hrsShift: e.target.value });\r\n  }\r\n\r\n  updateTotals = (newStateChangeObj) => {\r\n    const newState = {...this.state, ...newStateChangeObj};\r\n\r\n    // Check if all required input fields are filled in\r\n    if (newState.pcsYear !== 0   && newState.pcsYear !== '' &&\r\n        newState.pcsWeek !== 0   && newState.pcsWeek !== '' &&\r\n        newState.pcsDay !== 0    && newState.pcsDay !== '' &&\r\n        newState.numShifts !== 0 && newState.numShifts !== '' &&\r\n        newState.hrsShift !== 0  && newState.hrsShift !== '') {\r\n          \r\n          // Calculate totals\r\n          newState.partsPerHour = newState.pcsDay / \r\n            (newState.numShifts * newState.hrsShift);\r\n          newState.partsPerMin = newState.partsPerHour / 60;\r\n          newState.secPerPart = 60 / newState.partsPerMin;\r\n    }\r\n\r\n    // Update state\r\n    this.setState(newState);\r\n\r\n    // Update secPerPart target in App.js state\r\n    this.props.updateSecPerPartTarget(newState.secPerPart);\r\n  }\r\n\r\n  updatePcs = (newStateChangeObj) => {\r\n    const newState = {...this.state, ...newStateChangeObj};\r\n\r\n    // Check if all required input fields are filled in\r\n    if (newState.partsPerHour !== 0   && newState.partsPerHour !== '' &&\r\n        newState.partsPerMin !== 0   && newState.partsPerMin !== '' &&\r\n        newState.secPerPart !== 0    && newState.secPerPart !== '' &&\r\n        newState.numShifts !== 0 && newState.numShifts !== '' &&\r\n        newState.hrsShift !== 0  && newState.hrsShift !== '') {\r\n          \r\n          // Calculate totals\r\n          newState.pcsDay = newState.partsPerHour * \r\n            newState.numShifts * newState.hrsShift;\r\n\r\n          newState.pcsWeek = newState.partsPerMin * 5;\r\n          newState.pcsYear = newState.partsPerMin * 50 * 5;\r\n    }\r\n\r\n    // Update state\r\n    this.setState(newState);\r\n\r\n    // Update pcsYear in App state for Totals reference\r\n    this.props.updatePcsYear(newState.pcsYear);\r\n\r\n    // Update secPerPart target in App.js state\r\n    this.props.updateSecPerPartTarget(newState.secPerPart);\r\n  }\r\n\r\n  partsPerHourChanged = (e) => {\r\n    console.log('pph changed')\r\n    const stateChangeObj = {\r\n      partsPerHour: e.target.value,\r\n      partsPerMin: e.target.value / 60,\r\n      secPerPart: e.target.value / 60 / 60,\r\n    };\r\n\r\n    this.updatePcs(stateChangeObj);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className={ratePaneClasses.heading}>Volume</h1>\r\n        <div className={classes.inputGroup}>\r\n          <Input\r\n            label=\"Pcs. Year\"\r\n            changed={this.pcsYearChangedHandler}\r\n            val={this.state.pcsYear}\r\n          />\r\n          <Input\r\n            label=\"Week (50)\"\r\n            changed={this.pcsWeekChangedHandler}\r\n            val={this.state.pcsWeek}\r\n            showDecimals\r\n          />\r\n          <Input\r\n            label=\"Day (5)\"\r\n            changed={this.pcsDayChangedHandler}\r\n            val={this.state.pcsDay}\r\n            showDecimals\r\n          />\r\n        </div>\r\n        <div className={classes.inputGroup}>\r\n          <Input\r\n            label=\"# Shifts\"\r\n            changed={this.numShiftsChangedHandler}\r\n            val={this.state.numShifts}\r\n          />\r\n          <Input\r\n            label=\"Hrs. Shift\"\r\n            changed={this.hrsShiftChangedHandler}\r\n            val={this.state.hrsShift}\r\n          />\r\n        </div>\r\n        <Totals\r\n          partsPerHour={this.state.partsPerHour}\r\n          partsPerMin={this.state.partsPerMin}\r\n          secPerPart={this.state.secPerPart}\r\n          secPerPartTarget={this.props.secPerPartTarget}\r\n          partsPerHourChanged={this.partsPerHourChanged}\r\n          partsPerMinChanged={this.partsPerMinChanged}\r\n          secPerPartChanged={this.secPerPartChanged}\r\n          disabled=\"true\" // Switched off for now\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default VolumePane;","import React, { Component } from 'react';\r\n\r\nimport classes from './RatePane.module.css';\r\nimport Input from '../../components/Input/Input';\r\nimport Totals from '../Totals/Totals';\r\n\r\nclass RatePane extends Component {\r\n  state = {\r\n    numOf: '',\r\n    cycleTime: '',\r\n    partsPerHour: '',\r\n    partsPerMin: '',\r\n    secPerPart: '',\r\n  }\r\n\r\n  numOfChangedHandler = (e) => {\r\n    this.updateTotals({ numOf: Number(e.target.value) });\r\n  }\r\n\r\n  cycleTimeChangedHandler = (e) => {\r\n    this.updateTotals({ cycleTime: Number(e.target.value) });\r\n  }\r\n\r\n  updateTotals = (newStateChangeObj) => {\r\n    // Copy state and overwrite changed val with newStateChangeObj\r\n    const newState = {...this.state, ...newStateChangeObj};\r\n\r\n    // Calculate totals\r\n    if (newState.numOf !== 0 && newState.numOf !== '' &&\r\n      newState.cycleTime !== 0 && newState.cycleTime !== '') {\r\n      \r\n        newState.secPerPart = newState.cycleTime / newState.numOf;\r\n        newState.partsPerMin = 60 / newState.secPerPart;\r\n        newState.partsPerHour = 60 * newState.partsPerMin;\r\n    }\r\n\r\n    // Update state\r\n    this.setState(newState);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className={classes.RatePane}>\r\n        <div>\r\n          <h1 className={classes.heading}>{this.props.pageName}</h1>\r\n          <Input\r\n            label={'# ' + this.props.numOfLabel}\r\n            changed={this.numOfChangedHandler}\r\n            val={this.state.numOf}\r\n          />\r\n          <Input\r\n            label=\"Cycle Time (s)\"\r\n            changed={this.cycleTimeChangedHandler}\r\n            val={this.state.cycleTime}\r\n          />\r\n        </div>\r\n        \r\n        <div className={classes.totals}>\r\n          <Totals\r\n            partsPerHour={this.state.partsPerHour}\r\n            partsPerMin={this.state.partsPerMin}\r\n            secPerPart={this.state.secPerPart}\r\n            secPerPartTarget={this.props.secPerPartTarget}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default RatePane;","import React from 'react';\r\n\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n  <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n    <div className={[classes.topLine, props.showSettings ? classes.topClosed : classes.topOpen].join(' ')}></div>\r\n    <div className={[classes.bottomLine, props.showSettings ? classes.bottomClosed : classes.bottomOpen].join(' ')}></div>\r\n  </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport classes from './TopBar.module.css';\r\nimport DrawerToggle from '../DrawerToggle/DrawerToggle';\r\n\r\nconst topBar = (props) => {\r\n\r\n  // Thank you Elias Zamaria: https://stackoverflow.com/a/2901298\r\n  const addCommas = (num) => {\r\n    var parts = num.toString().split(\".\");\r\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    return parts.join(\".\");\r\n  }\r\n\r\n  return (\r\n    <div className={classes.TopBar}>\r\n      <div className={classes.Target}>\r\n        <p><span>Pcs. Year:</span> <strong>{props.pcsYear === null ? '?' : addCommas(props.pcsYear)}</strong></p>\r\n        <p><span>(s) Per Part:</span> <strong>{props.target === null || props.target === undefined ? '?' : Number(props.target).toFixed(2)}</strong></p>\r\n      </div>\r\n      <DrawerToggle\r\n        clicked={props.clicked}\r\n        showSettings={props.showSettings}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default topBar;","import React, { Component } from 'react';\r\n\r\nimport classes from './PaneEditor.module.css';\r\n\r\nclass PaneEditor extends Component {\r\n  state = {\r\n    editing: false,\r\n    tempNewName: '',\r\n    tempNewNumOf: '',\r\n  }\r\n\r\n  componentWillMount() {\r\n    // Set tempNew to passed in props if existent\r\n    if (this.props.name && this.props.numOfLabel) {\r\n      this.setState({\r\n        tempNewName: this.props.name,\r\n        tempNewNumOf: this.props.numOfLabel\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUpdate() {\r\n    if (this.props.new && !this.state.editing &&\r\n      this.state.tempNewName !== '' && this.state.tempNewNumOf !== '') {\r\n      this.setState({ tempNewName: '', tempNewNumOf: '' });\r\n    }\r\n  }\r\n\r\n  toggleEditingHandler = () => {\r\n    // Build new pane obj and new pane\r\n    const newPane = {};\r\n    if (this.state.editing && this.state.tempNewName !== '' && this.state.tempNewNumOf !== '') {\r\n      newPane.name = this.state.tempNewName;\r\n      newPane.numOfLabel = this.state.tempNewNumOf;\r\n\r\n      if (this.props.new) {\r\n        console.log('its new!');\r\n        // Send to App with new pane to update panes\r\n        this.props.addPane(newPane);\r\n        \r\n        // Clear input if it's the add new row\r\n        this.setState({ tempNewName: '', tempNewNumOf: '' });\r\n      } else {\r\n        this.props.editPane({\r\n          id: this.props.id,\r\n          name: this.state.tempNewName,\r\n          numOfLabel: this.state.tempNewNumOf\r\n        });\r\n      }\r\n    }\r\n\r\n    this.setState({ editing: !this.state.editing });\r\n  }\r\n\r\n  // Store temporarily in state until confirm\r\n  nameChangedHandler = (newTempName) => {\r\n    this.setState({ tempNewName: newTempName.slice() });\r\n  }\r\n  numOfChangedHandler = (newTempNumOf) => {\r\n    this.setState({ tempNewNumOf: newTempNumOf.slice() });\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    // Set up classes for component and add/edit/done button\r\n    let classesArr = [classes.PaneEditor];\r\n    let addButtonIcon;\r\n\r\n    if (this.state.editing) {\r\n      classesArr.push(classes.editing);\r\n\r\n      addButtonIcon = <i className={\"far fa-check-circle\"}></i>;\r\n    } else {\r\n      if (this.props.new) {\r\n        addButtonIcon = <i className=\"fas fa-plus-circle\"></i>;\r\n      } else {\r\n        addButtonIcon = <i className=\"far fa-edit\"></i>;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className={classesArr.join(' ')}>\r\n        <input\r\n          type=\"text\"\r\n          className={classes.name}\r\n          defaultValue={this.props.new ? this.state.tempNewName : this.props.name}\r\n          onChange={(e) => this.nameChangedHandler(e.target.value)}\r\n          disabled={!this.state.editing}\r\n        />\r\n        <div className={classes.numOfLabel}>\r\n          <span>{this.props.numOfLabel ? '# of: ' : ''}</span>\r\n          <input\r\n            type=\"text\"\r\n            className={classes.numOfInput}\r\n            defaultValue={this.props.new ? this.state.tempNewNumOf : this.props.numOfLabel}\r\n            onChange={(e) => this.numOfChangedHandler(e.target.value)}\r\n            disabled={!this.state.editing}\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          // Edit/Done Editing button\r\n          className={this.state.editing ? [classes.btnEdit, classes.btnDone].join(' ') : classes.btnEdit}\r\n          onClick={this.toggleEditingHandler}\r\n          onBlur={() => console.log('blur')}\r\n        >{addButtonIcon}</button>\r\n\r\n        <button\r\n          // Delete button\r\n          onClick={() => this.props.deleteClicked(this.props.id)}\r\n          className={classes.btnRemove}\r\n        ><i className=\"far fa-trash-alt\"></i></button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default PaneEditor;","import React, { Component } from 'react';\r\n\r\nimport classes from './SettingsPanel.module.css';\r\nimport PaneEditor from './PaneEditor/PaneEditor';\r\n\r\nclass SettingsPanel extends Component {\r\n\r\n  componentWillUpdate() {\r\n    console.log('[SettingsPanel] will update');\r\n    console.log(this.props.panes)\r\n  }\r\n\r\n  render() {\r\n    const panesComps = this.props.panes.map(paneObj => {\r\n      return (\r\n        <PaneEditor\r\n          key={paneObj.id}\r\n          id={paneObj.id}\r\n          name={paneObj.name}\r\n          numOfLabel={paneObj.numOfLabel}\r\n          deleteClicked={this.props.deleteClicked}\r\n          editPane={this.props.editPane}\r\n        />\r\n      );\r\n    });\r\n\r\n    // Set panel to open or closed\r\n    const panelClasses = [classes.SettingsPanel];\r\n    panelClasses.push(this.props.show ? classes.open : classes.closed);\r\n\r\n    return (\r\n      <div className={panelClasses.join(' ')}>\r\n\r\n          <h2>Settings</h2>\r\n        <div className={classes.heading}>\r\n\r\n          <button\r\n            className={[classes.darkToggle, this.props.darkEnabled ?classes.dark : classes.light].join(' ')}\r\n            onClick={this.props.darkToggleClicked}\r\n          >\r\n            <i className=\"far fa-lightbulb\"></i>\r\n          </button>\r\n        </div>\r\n\r\n        {panesComps}\r\n\r\n        <PaneEditor\r\n          key=\"newPanel\"\r\n          id={null}\r\n          deleteClicked={this.props.deleteClicked}\r\n          addPane={this.props.addPane}\r\n          new\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default SettingsPanel;","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => {\r\n  return (props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null);\r\n};\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport classes from './PaneNav.module.css';\r\n\r\nconst paneNav = (props) => {\r\n  return (\r\n    <div className={classes.PaneNav}>\r\n      <div\r\n        className={[classes.arrow, classes.left].join(' ')}\r\n        onClick={props.prev}\r\n      >\r\n        <div className={[classes.line, classes.top].join(' ')}></div>\r\n        <div className={[classes.line, classes.bottom].join(' ')}></div>\r\n      </div>\r\n      <div\r\n        className={[classes.arrow, classes.right].join(' ')}\r\n        onClick={props.next}\r\n      >\r\n        <div className={[classes.line, classes.top].join(' ')}></div>\r\n        <div className={[classes.line, classes.bottom].join(' ')}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default paneNav;","import React, { Component } from 'react';\nimport ReactSwipe from 'react-swipe';\n\nimport './App.css';\nimport VolumePane from './containers/VolumePane/VolumePane';\nimport RatePane from './containers/RatePane/RatePane';\nimport TopBar from './components/TopBar/TopBar';\nimport SettingsPanel from './components/SettingsPanel/SettingsPanel';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport PaneNav from './components/PaneNav/PaneNav';\n\nclass App extends Component {\n  state = {\n    panes: [\n      {\n        id: 1,\n        name: 'winding',\n        numOfLabel: 'heads',\n      },\n      {\n        id: 2,\n        name: 'molding',\n        numOfLabel: 'cavities',\n      },\n    ],\n    secPerPart: {\n      volume: null,\n      winding: null,\n      molding: null,\n    },\n    pcsYear: null,\n    showSettings: false,\n    nextId: 3,\n    swipeRefresh: 0,\n    darkMode: true,\n    position: 0,\n  }\n\n  componentWillMount() {\n    // Overwrite default panes and secPerPart state with cookie if present\n    const cookie = this.getCookie('panes');\n\n    if (cookie) {\n      const cookiePanes = JSON.parse(cookie);\n      \n      const cookieSecPerPartStrArr = cookiePanes.map(pane => pane.name);\n      const newSecPerPartState = {};\n      cookieSecPerPartStrArr.forEach(paneName => newSecPerPartState[paneName] = null);\n\n      // Set new nextId according to highest id in cookie\n      let paneIds = cookiePanes.map(pane => pane.id);\n      let newNextId = 0;\n      paneIds.forEach(id => newNextId = id >= newNextId ? id + 1 : newNextId);\n\n      this.setState({\n        panes: cookiePanes,\n        secPerPart: newSecPerPartState,\n        nextId: newNextId,\n      });\n    } \n  }\n\n  getCookie = (cookieName) => {\n    let name = cookieName + '=';\n    let decodedCookie = decodeURIComponent(document.cookie);\n    let ca = decodedCookie.split(';');\n\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n  }\n\n  secPerPartTargetChangedHandler = (newTargetVal) => {\n    const newSecPerPartState = {...this.state.secPerPart};\n    newSecPerPartState.volume = newTargetVal;\n\n    this.setState({ secPerPart: newSecPerPartState });\n  }\n\n  pcsYearChangedHandler = (newPcsYearVal) => {\n    this.setState({ pcsYear: newPcsYearVal });\n  }\n\n  toggleShowSettings = () => {\n    // Open or close settings \n    this.setState({ showSettings: !this.state.showSettings });\n  }\n\n  deletePaneHandler = paneId => {\n    // Copy pane state\n    const newPaneState = this.state.panes.map(pane => {\n      return {...pane};\n    })\n    .filter(pane => pane.id !== paneId);\n\n    this.setState({\n      panes: newPaneState,\n      swipeRefresh: this.state.swipeRefresh + 1,\n    });\n\n    this.updatePanesCookie(newPaneState);\n  }\n\n  addPaneHandler = newPaneObj => {\n    // Copy pane state\n    const newPaneState = this.state.panes.map(pane => {\n      return {...pane};\n    });\n\n    // Add next available id, push to new state obj\n    newPaneObj.id = this.state.nextId;\n    newPaneState.push(newPaneObj);\n\n    this.setState({\n      panes: newPaneState,\n      nextId: this.state.nextId + 1,\n      swipeRefresh: this.state.swipeRefresh + 1,\n    });\n\n    this.updatePanesCookie(newPaneState);\n  }\n\n  editPaneHandler = editiedPaneObj => {\n    // Copy pane state\n    const newPaneState = this.state.panes.map(pane => {\n      return pane.id === editiedPaneObj.id ? editiedPaneObj : {...pane};\n    });\n\n    // Update pane\n    // newPaneState[editiedPaneObj.name] = editiedPaneObj;\n\n    // Update state\n    this.setState({\n      panes: newPaneState,\n      swipeRefresh: this.state.swipeRefresh + 1,\n    });\n\n    this.updatePanesCookie(newPaneState);\n  }\n\n  updatePanesCookie = (newPaneState) => {\n    let date = new Date();\n    date.setFullYear(date.getFullYear() + 1);\n\n    document.cookie = `panes=${JSON.stringify(newPaneState)}; expires=${date.toUTCString()}`;\n  }\n\n  darkToggleClickedHandler = () => {\n    this.setState({ darkMode: !this.state.darkMode });\n  }\n\n  render() {\n    let reactSwipeEl;\n    //! ReactSwipe must have divs as children, then components\n\n    // Set up other panes (besides volume)\n    const ratePanes = this.state.panes.map((pane, index) => {\n      return (\n        <div \n          className=\"swipeDiv\"\n          key={pane.id}>\n          <RatePane\n            pageName={pane.name}\n            numOfLabel={pane.numOfLabel}\n            secPerPartTarget={this.state.secPerPart.volume}\n          />\n        </div>\n      );\n    });\n\n    return (\n      <div className={this.state.darkMode ? 'App Dark' : 'App Light'}>\n        <TopBar\n          pcsYear={this.state.pcsYear}\n          target={this.state.secPerPart.volume}\n          clicked={this.toggleShowSettings}\n          showSettings={this.state.showSettings}\n        />\n\n        <PaneNav\n          className=\"PaneNav\"\n          prev={() => reactSwipeEl.prev()}\n          next={() => reactSwipeEl.next()}\n          // pos={() => reactSwipeEl.getPos()}\n          // len={this.state.panes.length + 1}\n        />\n        \n        <ReactSwipe\n          swipeOptions={{ continuous: false }}\n          className=\"ReactSwipe\"\n          ref={el => (reactSwipeEl = el)}\n          key={this.state.swipeRefresh} // Only refreshes correctly on key change\n        >\n          <div className=\"swipeDiv\">\n            <VolumePane\n              secPerPartTarget={this.state.secPerPart.volume}\n              updateSecPerPartTarget={(newTargetVal) => this.secPerPartTargetChangedHandler(newTargetVal)}\n              updatePcsYear={(newPcsYearVal) => this.pcsYearChangedHandler(newPcsYearVal)}\n              swipeEl={reactSwipeEl}\n            />\n          </div>\n\n          {ratePanes}\n\n        </ReactSwipe>\n\n        <SettingsPanel\n          show={this.state.showSettings}\n          clicked={this.toggleShowSettings}\n          panes={this.state.panes}\n          deleteClicked={this.deletePaneHandler}\n          addPane={this.addPaneHandler}\n          editPane={this.editPaneHandler}\n          darkToggleClicked={this.darkToggleClickedHandler}\n          darkEnabled={this.state.darkMode}\n        />\n        <Backdrop\n          show={this.state.showSettings}\n          clicked={this.toggleShowSettings}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}