{"version":3,"sources":["components/PaneNav/PaneNav.module.css","components/SettingsPanel/PaneEditor/PaneEditor.module.css","components/DrawerToggle/DrawerToggle.module.css","components/SettingsPanel/SettingsPanel.module.css","containers/RatePane/RatePane.module.css","components/Input/Input.module.css","containers/VolumePane/VolumePane.module.css","components/TopBar/TopBar.module.css","containers/Totals/Totals.module.css","components/Backdrop/Backdrop.module.css","components/Input/Input.js","containers/Totals/Totals.js","containers/VolumePane/VolumePane.js","containers/RatePane/RatePane.js","components/DrawerToggle/DrawerToggle.js","components/TopBar/TopBar.js","components/SettingsPanel/PaneEditor/PaneEditor.js","components/SettingsPanel/SettingsPanel.js","components/Backdrop/Backdrop.js","components/PaneNav/PaneNav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PaneNav","ReactSwipe","arrow","line","left","right","top","bottom","disabled","PaneEditor","editing","name","numOfInput","numOfLabel","btnDone","btnRemove","DrawerToggle","topLine","bottomLine","topClosed","bottomClosed","SettingsPanel","open","closed","heading","darkToggle","dark","light","RatePane","totals","Input","label","inputField","success","danger","ok","inputGroup","TopBar","Target","Totals","Backdrop","state","focused","handleFocus","event","_this","setState","_this2","this","value","props","val","showDecimals","Number","toFixed","react_default","a","createElement","className","classes","join","type","tabIndex","onChange","changed","readOnly","onFocus","onBlur","Component","secPerPartTarget","secPerPartClassesArr","secPerPart","push","secPerPartClasses","components_Input_Input","partsPerHour","partsPerHourChanged","partsPerMin","partsPerMinChanged","secPerPartChanged","VolumePane","pcsYear","pcsWeek","pcsDay","numShifts","hrsShift","pcsYearChangedHandler","e","stateChangeObj","target","updateTotals","updatePcsYear","pcsWeekChangedHandler","pcsDayChangedHandler","numShiftsChangedHandler","hrsShiftChangedHandler","newStateChangeObj","newState","Object","objectSpread","updateSecPerPartTarget","updatePcs","console","log","ratePaneClasses","numOf","cycleTime","numOfChangedHandler","cycleTimeChangedHandler","pageName","drawerToggle","onClick","clicked","showSettings","topOpen","bottomOpen","topBar","num","parts","toString","split","replace","addCommas","undefined","tempNewName","tempNewNumOf","toggleEditingHandler","allowEditing","new","newPane","addPane","nameInput","editPane","id","nameChangedHandler","newTempName","slice","clear","newTempNumOf","addButtonIcon","classesArr","onSubmit","preventDefault","defaultValue","ref","el","btnEdit","deleteClicked","setAllowEditingHandler","bool","panes","panesComps","map","paneObj","SettingsPanel_PaneEditor_PaneEditor","key","setAllowEditing","panelClasses","show","darkEnabled","darkToggleClicked","backdrop","paneNav","prev","next","App","volume","winding","molding","nextId","swipeRefresh","darkMode","position","getCookie","cookieName","ca","decodeURIComponent","document","cookie","i","length","c","charAt","substring","indexOf","secPerPartTargetChangedHandler","newTargetVal","newSecPerPartState","newPcsYearVal","toggleShowSettings","deletePaneHandler","paneId","newPaneState","pane","filter","updatePanesCookie","addPaneHandler","newPaneObj","editPaneHandler","editiedPaneObj","date","Date","setFullYear","getFullYear","concat","JSON","stringify","toUTCString","updateDarkModeCookie","isEnabled","darkToggleClickedHandler","cookiePanes","parse","cookieSecPerPartStrArr","forEach","paneName","paneIds","newNextId","reactSwipeEl","ratePanes","index","containers_RatePane_RatePane","pos","getPos","lib_default","swipeOptions","continuous","containers_VolumePane_VolumePane","swipeEl","components_SettingsPanel_SettingsPanel","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.316501f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"PaneNav\":\"PaneNav_PaneNav__cTFrn\",\"ReactSwipe\":\"PaneNav_ReactSwipe__qOEHX\",\"arrow\":\"PaneNav_arrow__1N1y1\",\"line\":\"PaneNav_line__2cWJS\",\"left\":\"PaneNav_left__3zQIL\",\"right\":\"PaneNav_right__3yJrb\",\"top\":\"PaneNav_top__3sNWT\",\"bottom\":\"PaneNav_bottom__3sXYB\",\"disabled\":\"PaneNav_disabled__3UD_3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PaneEditor\":\"PaneEditor_PaneEditor__1eGPj\",\"editing\":\"PaneEditor_editing__3QeBm\",\"name\":\"PaneEditor_name__1XWlX\",\"numOfInput\":\"PaneEditor_numOfInput__2esxw\",\"numOfLabel\":\"PaneEditor_numOfLabel__1tM_N\",\"btnDone\":\"PaneEditor_btnDone__ykF5C\",\"btnRemove\":\"PaneEditor_btnRemove__28FXf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3U5ES\",\"topLine\":\"DrawerToggle_topLine__3vCxL\",\"bottomLine\":\"DrawerToggle_bottomLine__3qY4m\",\"topClosed\":\"DrawerToggle_topClosed__3UnE4\",\"bottomClosed\":\"DrawerToggle_bottomClosed__1i9Dx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SettingsPanel\":\"SettingsPanel_SettingsPanel__3v9wD\",\"open\":\"SettingsPanel_open__2NXrz\",\"closed\":\"SettingsPanel_closed__2ALeN\",\"heading\":\"SettingsPanel_heading__1Fdsm\",\"darkToggle\":\"SettingsPanel_darkToggle__1hldZ\",\"dark\":\"SettingsPanel_dark__UjVq6\",\"light\":\"SettingsPanel_light__34q4O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RatePane\":\"RatePane_RatePane__1Rwr9\",\"heading\":\"RatePane_heading__2FLiF\",\"totals\":\"RatePane_totals__2jeTU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__UXjaz\",\"label\":\"Input_label__3mfHt\",\"inputField\":\"Input_inputField__2BvDi\",\"success\":\"Input_success__3rzQ_\",\"danger\":\"Input_danger__3kHjd\",\"ok\":\"Input_ok__13P3g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputGroup\":\"VolumePane_inputGroup__iyQwF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TopBar\":\"TopBar_TopBar__3maG0\",\"Target\":\"TopBar_Target__2Na-i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Totals\":\"Totals_Totals__1Oums\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3L-AZ\"};","import React, { Component } from 'react';\r\n\r\nimport classes from './Input.module.css';\r\n\r\nclass Input extends Component {\r\n\r\n  state = {\r\n    focused: false,\r\n  }\r\n\r\n  handleFocus = (event, focused) => {\r\n    this.setState({ focused: focused });\r\n    if (focused) {\r\n      //TODO: select text\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // Dont add decimals to integer inputs\r\n    let value = this.props.val;\r\n\r\n    if (value === 0 || value === '') {\r\n      value = '';\r\n    } else if (this.props.showDecimals) {\r\n      value = Number(this.props.val);\r\n      // Only set toFixed if not focused\r\n      if (!this.state.focused) {\r\n        value = value.toFixed(2);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className={classes.Input}>\r\n        <label className={classes.label}>{this.props.label}</label>\r\n        <input\r\n          className={[classes.inputField, classes[this.props.classes]].join(' ')}\r\n          type=\"number\"\r\n          tabIndex=\"-1\"\r\n          value={value}\r\n          onChange={this.props.changed}\r\n          readOnly={this.props.readOnly}\r\n          disabled={this.props.disabled}\r\n          onFocus={(event) => this.handleFocus(event, true)}\r\n          onBlur={(event) => this.handleFocus(event, false)}\r\n        ></input>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n \r\nexport default Input;","import React from 'react';\r\n\r\nimport Input from '../../components/Input/Input';\r\nimport classes from './Totals.module.css';\r\n\r\nconst totals = (props) => {\r\n  const secPerPartTarget = props.secPerPartTarget;\r\n  const secPerPartClassesArr = [];\r\n\r\n  if (props.secPerPart !== '') {\r\n    if (props.secPerPart < secPerPartTarget) \r\n      secPerPartClassesArr.push('success');\r\n    else if (props.secPerPart > secPerPartTarget) \r\n      secPerPartClassesArr.push('danger');\r\n    else\r\n      secPerPartClassesArr.push('ok');\r\n  }\r\n  const secPerPartClasses = secPerPartClassesArr.join(' ');\r\n\r\n    // Condidtionally apply style to secPerPart input depending on target\r\n    return (\r\n      <div className={classes.Totals}>\r\n        <Input\r\n          label=\"PP/Hour\"\r\n          val={props.partsPerHour}\r\n          readOnly\r\n          disabled={props.disabled === 'false' ? false : true}\r\n          onChange={(event) => props.partsPerHourChanged(event)}\r\n          showDecimals\r\n        />\r\n        <Input\r\n          label=\"PP/Min\"\r\n          val={props.partsPerMin}\r\n          readOnly\r\n          disabled={props.disabled === 'false' ? false : true}\r\n          onChange={props.partsPerMinChanged}\r\n          showDecimals\r\n        />\r\n        <Input\r\n          classes={secPerPartClasses}\r\n          label=\"(s) per part\"\r\n          val={props.secPerPart}\r\n          readOnly\r\n          disabled={props.disabled === 'false' ? false : true}\r\n          onChange={props.secPerPartChanged}\r\n          showDecimals\r\n        />\r\n      </div>\r\n    );\r\n\r\n}\r\n \r\nexport default totals;","import React, { Component } from 'react';\r\n\r\nimport ratePaneClasses from '../RatePane/RatePane.module.css';\r\nimport classes from './VolumePane.module.css';\r\nimport Input from '../../components/Input/Input';\r\nimport Totals from '../Totals/Totals';\r\n\r\nclass VolumePane extends Component {\r\n  state = {\r\n    pcsYear: '',\r\n    pcsWeek: '',\r\n    pcsDay: '',\r\n    numShifts: '',\r\n    hrsShift: 7.5,\r\n    partsPerHour: '',\r\n    partsPerMin: '',\r\n    secPerPart: '',\r\n  }\r\n\r\n  //TODO: Make modular, use array and get indexes to make correct calcs?\r\n  pcsYearChangedHandler = (e) => {\r\n    const stateChangeObj = {\r\n      pcsYear: e.target.value,\r\n      pcsWeek: e.target.value / 50,\r\n      pcsDay: e.target.value / 50 / 5,\r\n    }\r\n    this.updateTotals(stateChangeObj);\r\n\r\n    // Update pcsYear in App state for Totals reference\r\n    this.props.updatePcsYear(e.target.value);\r\n  }\r\n\r\n  pcsWeekChangedHandler = (e) => {\r\n    const stateChangeObj = {\r\n      pcsYear: e.target.value * 50,\r\n      pcsWeek: e.target.value,\r\n      pcsDay: e.target.value / 5,\r\n    }\r\n    \r\n    // Update pcsYear in App state for Totals reference\r\n    this.props.updatePcsYear(stateChangeObj.pcsYear);\r\n    \r\n    this.updateTotals(stateChangeObj);\r\n  }\r\n\r\n  pcsDayChangedHandler = (e) => {\r\n    const stateChangeObj = {\r\n      pcsYear: e.target.value * 50 * 5,\r\n      pcsWeek: e.target.value * 5,\r\n      pcsDay: e.target.value,\r\n    }\r\n    \r\n    // Update pcsYear in App state for Totals reference\r\n    this.props.updatePcsYear(stateChangeObj.pcsYear);\r\n\r\n    this.updateTotals(stateChangeObj);\r\n  }\r\n\r\n  numShiftsChangedHandler = (e) => {\r\n    this.updateTotals({ numShifts: e.target.value });\r\n  }\r\n\r\n  hrsShiftChangedHandler = (e) => {\r\n    this.updateTotals({ hrsShift: e.target.value });\r\n  }\r\n\r\n  updateTotals = (newStateChangeObj) => {\r\n    const newState = {...this.state, ...newStateChangeObj};\r\n\r\n    // Check if all required input fields are filled in\r\n    if (newState.pcsYear !== 0   && newState.pcsYear !== '' &&\r\n        newState.pcsWeek !== 0   && newState.pcsWeek !== '' &&\r\n        newState.pcsDay !== 0    && newState.pcsDay !== '' &&\r\n        newState.numShifts !== 0 && newState.numShifts !== '' &&\r\n        newState.hrsShift !== 0  && newState.hrsShift !== '') {\r\n          \r\n          // Calculate totals\r\n          newState.partsPerHour = newState.pcsDay / \r\n            (newState.numShifts * newState.hrsShift);\r\n          newState.partsPerMin = newState.partsPerHour / 60;\r\n          newState.secPerPart = 60 / newState.partsPerMin;\r\n    }\r\n\r\n    // Update state\r\n    this.setState(newState);\r\n\r\n    // Update secPerPart target in App.js state\r\n    this.props.updateSecPerPartTarget(newState.secPerPart);\r\n  }\r\n\r\n  updatePcs = (newStateChangeObj) => {\r\n    const newState = {...this.state, ...newStateChangeObj};\r\n\r\n    // Check if all required input fields are filled in\r\n    if (newState.partsPerHour !== 0   && newState.partsPerHour !== '' &&\r\n        newState.partsPerMin !== 0   && newState.partsPerMin !== '' &&\r\n        newState.secPerPart !== 0    && newState.secPerPart !== '' &&\r\n        newState.numShifts !== 0 && newState.numShifts !== '' &&\r\n        newState.hrsShift !== 0  && newState.hrsShift !== '') {\r\n          \r\n          // Calculate totals\r\n          newState.pcsDay = newState.partsPerHour * \r\n            newState.numShifts * newState.hrsShift;\r\n\r\n          newState.pcsWeek = newState.partsPerMin * 5;\r\n          newState.pcsYear = newState.partsPerMin * 50 * 5;\r\n    }\r\n\r\n    // Update state\r\n    this.setState(newState);\r\n\r\n    // Update pcsYear in App state for Totals reference\r\n    this.props.updatePcsYear(newState.pcsYear);\r\n\r\n    // Update secPerPart target in App.js state\r\n    this.props.updateSecPerPartTarget(newState.secPerPart);\r\n  }\r\n\r\n  partsPerHourChanged = (e) => {\r\n    console.log('pph changed')\r\n    const stateChangeObj = {\r\n      partsPerHour: e.target.value,\r\n      partsPerMin: e.target.value / 60,\r\n      secPerPart: e.target.value / 60 / 60,\r\n    };\r\n\r\n    this.updatePcs(stateChangeObj);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className={ratePaneClasses.heading}>Volume</h1>\r\n        <div className={classes.inputGroup}>\r\n          <Input\r\n            label=\"Pcs. Year\"\r\n            changed={this.pcsYearChangedHandler}\r\n            val={this.state.pcsYear}\r\n          />\r\n          <Input\r\n            label=\"Week (50)\"\r\n            changed={this.pcsWeekChangedHandler}\r\n            val={this.state.pcsWeek}\r\n            showDecimals\r\n          />\r\n          <Input\r\n            label=\"Day (5)\"\r\n            changed={this.pcsDayChangedHandler}\r\n            val={this.state.pcsDay}\r\n            showDecimals\r\n          />\r\n        </div>\r\n        <div className={classes.inputGroup}>\r\n          <Input\r\n            label=\"# Shifts\"\r\n            changed={this.numShiftsChangedHandler}\r\n            val={this.state.numShifts}\r\n          />\r\n          <Input\r\n            label=\"Hrs. Shift\"\r\n            changed={this.hrsShiftChangedHandler}\r\n            val={this.state.hrsShift}\r\n          />\r\n        </div>\r\n        <Totals\r\n          partsPerHour={this.state.partsPerHour}\r\n          partsPerMin={this.state.partsPerMin}\r\n          secPerPart={this.state.secPerPart}\r\n          secPerPartTarget={this.props.secPerPartTarget}\r\n          partsPerHourChanged={this.partsPerHourChanged}\r\n          partsPerMinChanged={this.partsPerMinChanged}\r\n          secPerPartChanged={this.secPerPartChanged}\r\n          disabled=\"true\" // Switched off for now\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default VolumePane;","import React, { Component } from 'react';\r\n\r\nimport classes from './RatePane.module.css';\r\nimport Input from '../../components/Input/Input';\r\nimport Totals from '../Totals/Totals';\r\n\r\nclass RatePane extends Component {\r\n  state = {\r\n    numOf: '',\r\n    cycleTime: '',\r\n    partsPerHour: '',\r\n    partsPerMin: '',\r\n    secPerPart: '',\r\n  }\r\n\r\n  numOfChangedHandler = (e) => {\r\n    this.updateTotals({ numOf: Number(e.target.value) });\r\n  }\r\n\r\n  cycleTimeChangedHandler = (e) => {\r\n    this.updateTotals({ cycleTime: Number(e.target.value) });\r\n  }\r\n\r\n  updateTotals = (newStateChangeObj) => {\r\n    // Copy state and overwrite changed val with newStateChangeObj\r\n    const newState = {...this.state, ...newStateChangeObj};\r\n\r\n    // Calculate totals\r\n    if (newState.numOf !== 0 && newState.numOf !== '' &&\r\n      newState.cycleTime !== 0 && newState.cycleTime !== '') {\r\n      \r\n        newState.secPerPart = newState.cycleTime / newState.numOf;\r\n        newState.partsPerMin = 60 / newState.secPerPart;\r\n        newState.partsPerHour = 60 * newState.partsPerMin;\r\n    }\r\n\r\n    // Update state\r\n    this.setState(newState);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className={classes.RatePane}>\r\n        <div>\r\n          <h1 className={classes.heading}>{this.props.pageName}</h1>\r\n          <Input\r\n            label={'# ' + this.props.numOfLabel}\r\n            changed={this.numOfChangedHandler}\r\n            val={this.state.numOf}\r\n          />\r\n          <Input\r\n            label=\"Cycle Time (s)\"\r\n            changed={this.cycleTimeChangedHandler}\r\n            val={this.state.cycleTime}\r\n          />\r\n        </div>\r\n        \r\n        <div className={classes.totals}>\r\n          <Totals\r\n            partsPerHour={this.state.partsPerHour}\r\n            partsPerMin={this.state.partsPerMin}\r\n            secPerPart={this.state.secPerPart}\r\n            secPerPartTarget={this.props.secPerPartTarget}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default RatePane;","import React from 'react';\r\n\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n  <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n    <div className={[classes.topLine, props.showSettings ? classes.topClosed : classes.topOpen].join(' ')}></div>\r\n    <div className={[classes.bottomLine, props.showSettings ? classes.bottomClosed : classes.bottomOpen].join(' ')}></div>\r\n  </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport classes from './TopBar.module.css';\r\nimport DrawerToggle from '../DrawerToggle/DrawerToggle';\r\n\r\nconst topBar = (props) => {\r\n\r\n  // Thank you Elias Zamaria: https://stackoverflow.com/a/2901298\r\n  const addCommas = (num) => {\r\n    var parts = num.toString().split(\".\");\r\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    return parts.join(\".\");\r\n  }\r\n\r\n  return (\r\n    <div className={classes.TopBar}>\r\n      <div className={classes.Target}>\r\n        <p><span>Pcs. Year:</span> <strong>{props.pcsYear === null ? '?' : addCommas(props.pcsYear)}</strong></p>\r\n        <p><span>(s) Per Part:</span> <strong>{props.target === null || props.target === undefined ? '?' : Number(props.target).toFixed(2)}</strong></p>\r\n      </div>\r\n      <DrawerToggle\r\n        clicked={props.clicked}\r\n        showSettings={props.showSettings}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default topBar;","import React, { Component } from 'react';\r\n\r\nimport classes from './PaneEditor.module.css';\r\n\r\nclass PaneEditor extends Component {\r\n  state = {\r\n    editing: false,\r\n    tempNewName: '',\r\n    tempNewNumOf: '',\r\n  }\r\n\r\n  componentWillMount() {\r\n    // Set tempNew to passed in props if existent\r\n    if (this.props.name && this.props.numOfLabel) {\r\n      this.setState({\r\n        tempNewName: this.props.name,\r\n        tempNewNumOf: this.props.numOfLabel\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUpdate() {\r\n    if (this.props.new && !this.state.editing &&\r\n      this.state.tempNewName !== '' && this.state.tempNewNumOf !== '') {\r\n      this.setState({ tempNewName: '', tempNewNumOf: '' });\r\n    }\r\n  }\r\n\r\n  toggleEditingHandler = () => {\r\n\r\n    if (this.props.allowEditing) {\r\n      if (this.state.editing && this.state.tempNewName !== '' && this.state.tempNewNumOf !== '') {\r\n\r\n        if (this.props.new) {\r\n          // Build new pane obj and new pane\r\n          const newPane = {};\r\n  \r\n          newPane.name = this.state.tempNewName;\r\n          newPane.numOfLabel = this.state.tempNewNumOf;\r\n\r\n          // Send to App with new pane to update panes\r\n          this.props.addPane(newPane);\r\n          \r\n          // Clear input if it's the add new row\r\n          this.setState({ tempNewName: '', tempNewNumOf: '' });\r\n          this.nameInput.value = '';\r\n          this.numOfInput.value = '';\r\n          \r\n        } else {\r\n          this.props.editPane({\r\n            id: this.props.id,\r\n            name: this.state.tempNewName,\r\n            numOfLabel: this.state.tempNewNumOf\r\n          });\r\n\r\n          \r\n        }\r\n      }\r\n\r\n      this.setState({ editing: !this.state.editing });\r\n      // Disallow editing other rows\r\n      // this.props.setAllowEditing(this.state.editing);\r\n    }\r\n    // else {\r\n    //   // Allow editing other rows\r\n    //   this.props.setAllowEditing(!this.state.editing);\r\n    // }\r\n  }\r\n\r\n  // Store temporarily in state until confirm\r\n  nameChangedHandler = (newTempName) => {\r\n    this.setState({\r\n      tempNewName: newTempName.slice(),\r\n      clear: false,\r\n    });\r\n  }\r\n  numOfChangedHandler = (newTempNumOf) => {\r\n    this.setState({\r\n      tempNewNumOf: newTempNumOf.slice(),\r\n      clear: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // Set up classes for component and add/edit/done button\r\n    let classesArr = [classes.PaneEditor];\r\n    let addButtonIcon;\r\n\r\n    if (this.state.editing) {\r\n      classesArr.push(classes.editing);\r\n\r\n      addButtonIcon = <i className={\"far fa-check-circle\"}></i>;\r\n    } else {\r\n      if (this.props.new) {\r\n        addButtonIcon = <i className=\"fas fa-plus-circle\"></i>;\r\n      } else {\r\n        addButtonIcon = <i className=\"far fa-edit\"></i>;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className={classesArr.join(' ')}>\r\n        <form onSubmit={(e) => e.preventDefault()}>\r\n          <input\r\n            type=\"text\"\r\n            className={classes.name}\r\n            defaultValue={this.props.new ? '' : this.props.name}\r\n            onChange={(e) => this.nameChangedHandler(e.target.value)}\r\n            disabled={!this.state.editing}\r\n            ref={el => this.nameInput = el}\r\n          />\r\n          <div className={classes.numOfLabel}>\r\n            <span>{this.props.numOfLabel ? '# of: ' : ''}</span>\r\n            <input\r\n              type=\"text\"\r\n              className={classes.numOfInput}\r\n              defaultValue={this.props.new ? '' : this.props.numOfLabel}\r\n              onChange={(e) => this.numOfChangedHandler(e.target.value)}\r\n              disabled={!this.state.editing}\r\n              ref={el => this.numOfInput = el}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <button\r\n              // Edit/Done Editing button\r\n              className={this.state.editing ? [classes.btnEdit, classes.btnDone].join(' ') : classes.btnEdit}\r\n              onClick={this.toggleEditingHandler}\r\n              type=\"submit\"\r\n              tabIndex=\"-1\"\r\n            >{addButtonIcon}</button>\r\n\r\n            {this.props.new ? null : (\r\n              <button\r\n                // Delete button\r\n                className={classes.btnRemove}\r\n                onClick={() => this.props.deleteClicked(this.props.id)}\r\n                tabIndex=\"-1\"\r\n              ><i className=\"far fa-trash-alt\"></i></button>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default PaneEditor;","import React, { Component } from 'react';\r\n\r\nimport classes from './SettingsPanel.module.css';\r\nimport PaneEditor from './PaneEditor/PaneEditor';\r\n\r\nclass SettingsPanel extends Component {\r\n\r\n  state = {\r\n    allowEditing: true,\r\n  }\r\n\r\n  componentWillUpdate() {\r\n    console.log('[SettingsPanel] will update');\r\n    console.log(this.props.panes)\r\n  }\r\n\r\n  setAllowEditingHandler = (bool) => {\r\n    this.setState({ allowEditing: bool });\r\n  }\r\n\r\n  render() {\r\n    const panesComps = this.props.panes.map(paneObj => {\r\n      return (\r\n        <PaneEditor\r\n          key={paneObj.id}\r\n          id={paneObj.id}\r\n          name={paneObj.name}\r\n          numOfLabel={paneObj.numOfLabel}\r\n          deleteClicked={this.props.deleteClicked}\r\n          editPane={this.props.editPane}\r\n          allowEditing={this.state.allowEditing}\r\n          setAllowEditing={this.setAllowEditingHandler}\r\n        />\r\n      );\r\n    });\r\n\r\n    // Set panel to open or closed\r\n    const panelClasses = [classes.SettingsPanel];\r\n    panelClasses.push(this.props.show ? classes.open : classes.closed);\r\n\r\n    return (\r\n      <div className={panelClasses.join(' ')}>\r\n\r\n          <h2>Settings</h2>\r\n        <div className={classes.heading}>\r\n\r\n          <button\r\n            className={[classes.darkToggle, this.props.darkEnabled ?classes.dark : classes.light].join(' ')}\r\n            onClick={this.props.darkToggleClicked}\r\n            tabIndex=\"-1\"\r\n          >\r\n            <i className=\"far fa-lightbulb\"></i>\r\n          </button>\r\n        </div>\r\n\r\n        {panesComps}\r\n\r\n        <PaneEditor\r\n          key=\"newPanel\"\r\n          id={null}\r\n          deleteClicked={this.props.deleteClicked}\r\n          addPane={this.props.addPane}\r\n          new\r\n          allowEditing={this.state.allowEditing}\r\n          setAllowEditing={this.setAllowEditingHandler}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default SettingsPanel;","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => {\r\n  return (props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null);\r\n};\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport classes from './PaneNav.module.css';\r\n\r\nconst paneNav = (props) => {\r\n\r\n  // let pos;\r\n  // try {\r\n  //   pos = props.pos() || 0;\r\n  //   console.log('pos', pos)\r\n  // } catch (e) {\r\n  //   pos = 0;\r\n  //   console.log('caught')\r\n  // }\r\n\r\n  return (\r\n    <div className={classes.PaneNav}>\r\n      <div\r\n        className={[classes.arrow, classes.left].join(' ')}\r\n        onClick={props.prev}\r\n        // disabled={pos <= 0}\r\n      >\r\n        <div className={[classes.line, classes.top].join(' ')}></div>\r\n        <div className={[classes.line, classes.bottom].join(' ')}></div>\r\n      </div>\r\n      <div\r\n        className={[classes.arrow, classes.right].join(' ')}\r\n        onClick={props.next}\r\n        // disabled={pos}\r\n      >\r\n        <div className={[classes.line, classes.top].join(' ')}></div>\r\n        <div className={[classes.line, classes.bottom].join(' ')}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default paneNav;","import React, { Component } from 'react';\nimport ReactSwipe from 'react-swipe';\n\nimport './App.css';\nimport VolumePane from './containers/VolumePane/VolumePane';\nimport RatePane from './containers/RatePane/RatePane';\nimport TopBar from './components/TopBar/TopBar';\nimport SettingsPanel from './components/SettingsPanel/SettingsPanel';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport PaneNav from './components/PaneNav/PaneNav';\n\nclass App extends Component {\n  state = {\n    panes: [\n      {\n        id: 1,\n        name: 'winding',\n        numOfLabel: 'heads',\n      },\n      {\n        id: 2,\n        name: 'molding',\n        numOfLabel: 'cavities',\n      },\n    ],\n    secPerPart: {\n      volume: null,\n      winding: null,\n      molding: null,\n    },\n    pcsYear: null,\n    showSettings: false,\n    nextId: 3,\n    swipeRefresh: 0,\n    darkMode: true,\n    position: 0,\n  }\n\n  componentWillMount() {\n    // Overwrite default panes, secPerPart, darkMode state with cookie if present\n    const cookie = this.getCookie('panes');\n    const darkEnabled = this.getCookie('darkModeEnabled');\n\n    if (cookie && darkEnabled) {\n      const cookiePanes = JSON.parse(cookie);\n      \n      const cookieSecPerPartStrArr = cookiePanes.map(pane => pane.name);\n      const newSecPerPartState = {};\n      cookieSecPerPartStrArr.forEach(paneName => newSecPerPartState[paneName] = null);\n\n      // Set new nextId according to highest id in cookie\n      let paneIds = cookiePanes.map(pane => pane.id);\n      let newNextId = 0;\n      paneIds.forEach(id => newNextId = id >= newNextId ? id + 1 : newNextId);\n\n      this.setState({\n        panes: cookiePanes,\n        secPerPart: newSecPerPartState,\n        nextId: newNextId,\n        darkMode: darkEnabled,\n      });\n    } \n  }\n\n  getCookie = (cookieName) => {\n    let name = cookieName + '=';\n    let decodedCookie = decodeURIComponent(document.cookie);\n    let ca = decodedCookie.split(';');\n\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n  }\n\n  secPerPartTargetChangedHandler = (newTargetVal) => {\n    const newSecPerPartState = {...this.state.secPerPart};\n    newSecPerPartState.volume = newTargetVal;\n\n    this.setState({ secPerPart: newSecPerPartState });\n  }\n\n  pcsYearChangedHandler = (newPcsYearVal) => {\n    this.setState({ pcsYear: newPcsYearVal });\n  }\n\n  toggleShowSettings = () => {\n    // Open or close settings \n    this.setState({ showSettings: !this.state.showSettings });\n  }\n\n  deletePaneHandler = paneId => {\n    // Copy pane state\n    const newPaneState = this.state.panes.map(pane => {\n      return {...pane};\n    })\n    .filter(pane => pane.id !== paneId);\n\n    this.setState({\n      panes: newPaneState,\n      swipeRefresh: this.state.swipeRefresh + 1,\n    });\n\n    this.updatePanesCookie(newPaneState);\n  }\n\n  addPaneHandler = newPaneObj => {\n    // Copy pane state\n    const newPaneState = this.state.panes.map(pane => {\n      return {...pane};\n    });\n\n    // Add next available id, push to new state obj\n    newPaneObj.id = this.state.nextId;\n    newPaneState.push(newPaneObj);\n\n    this.setState({\n      panes: newPaneState,\n      nextId: this.state.nextId + 1,\n      swipeRefresh: this.state.swipeRefresh + 1,\n    });\n\n    this.updatePanesCookie(newPaneState);\n  }\n\n  editPaneHandler = editiedPaneObj => {\n    // Copy pane state\n    const newPaneState = this.state.panes.map(pane => {\n      return pane.id === editiedPaneObj.id ? editiedPaneObj : {...pane};\n    });\n\n    // Update state\n    this.setState({\n      panes: newPaneState,\n      swipeRefresh: this.state.swipeRefresh + 1,\n    });\n\n    this.updatePanesCookie(newPaneState);\n  }\n\n  updatePanesCookie = (newPaneState) => {\n    let date = new Date();\n    date.setFullYear(date.getFullYear() + 1);\n\n    document.cookie = `panes=${JSON.stringify(newPaneState)}; expires=${date.toUTCString()}`;\n  }\n\n  updateDarkModeCookie = (isEnabled) => {\n    let date = new Date();\n    date.setFullYear(date.getFullYear() + 1);\n\n    document.cookie = `darkModeEnabled=${isEnabled}; expires=${date.toUTCString()}`;\n  }\n\n  darkToggleClickedHandler = () => {\n    this.updateDarkModeCookie(!this.state.darkMode);\n    this.setState({ darkMode: !this.state.darkMode });\n  }\n\n  render() {\n    let reactSwipeEl;\n\n    // Set up other panes (besides volume)\n    const ratePanes = this.state.panes.map((pane, index) => {\n      return (\n        <div \n          className=\"swipeDiv\"\n          key={pane.id}>\n          <RatePane\n            pageName={pane.name}\n            numOfLabel={pane.numOfLabel}\n            secPerPartTarget={this.state.secPerPart.volume}\n          />\n        </div>\n      );\n    });\n\n    return (\n      <div className={this.state.darkMode ? 'App Dark' : 'App Light'}>\n        <TopBar\n          pcsYear={this.state.pcsYear}\n          target={this.state.secPerPart.volume}\n          clicked={this.toggleShowSettings}\n          showSettings={this.state.showSettings}\n        />\n\n        <PaneNav\n          className=\"PaneNav\"\n          prev={() => reactSwipeEl.prev()}\n          next={() => reactSwipeEl.next()}\n          pos={() => reactSwipeEl.getPos()}\n          // len={this.state.panes.length + 1}\n        />\n\n        \n        <ReactSwipe\n          //! ReactSwipe must have divs as children, then components\n          swipeOptions={{ continuous: false }}\n          className={this.state.showSettings ? \"ReactSwipe blur\" : \"ReactSwipe\"}\n          ref={el => (reactSwipeEl = el)}\n          key={this.state.swipeRefresh} // Only refreshes correctly on key change\n        >\n          <div className=\"swipeDiv\">\n            <VolumePane\n              secPerPartTarget={this.state.secPerPart.volume}\n              updateSecPerPartTarget={(newTargetVal) => this.secPerPartTargetChangedHandler(newTargetVal)}\n              updatePcsYear={(newPcsYearVal) => this.pcsYearChangedHandler(newPcsYearVal)}\n              swipeEl={reactSwipeEl}\n            />\n          </div>\n\n          {ratePanes}\n\n        </ReactSwipe>\n\n        <SettingsPanel\n          show={this.state.showSettings}\n          clicked={this.toggleShowSettings}\n          panes={this.state.panes}\n          deleteClicked={this.deletePaneHandler}\n          addPane={this.addPaneHandler}\n          editPane={this.editPaneHandler}\n          darkToggleClicked={this.darkToggleClickedHandler}\n          darkEnabled={this.state.darkMode}\n        />\n        <Backdrop\n          show={this.state.showSettings}\n          clicked={this.toggleShowSettings}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}